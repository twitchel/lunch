<?php

namespace Ninja\Lunch\LunchBundle\Entity\FoodOrder;

use Doctrine\ORM\EntityRepository;

use JMS\DiExtraBundle\Annotation as DI;
use JMS\SecurityExtraBundle\Annotation as Security;


/**
 * ItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends EntityRepository
{
    private $paginator;

    /**
     * @DI\InjectParams({
     *     "paginator" = @DI\Inject("knp_paginator")
     * })
     */
    public function setPaginator($paginator){
        $this->paginator = $paginator;
    }

    public function getPaginatedList($order, $page, $perPage){
        $qb = $this->createQueryBuilder('i');

        $qb
            ->innerJoin('i.order', 'o')
            ->andWhere($qb->expr()->eq('o.id', ':idOrder'))
            ->setParameter('idOrder', $order)
        ;

        return $this->paginator->paginate(
            $qb->getQuery(),
            $page,
            $perPage
        );
    }

    /**
     *
     * Hide's the logic for what to do when no current order exists
     *
     * @return FoodOrder The FoodOrder for today
     */
    public function getForOrderReport($id) {
        $qb = $this->createQueryBuilder('i');

        $qb
            ->select('count(i) as total, i as item')
            ->andWhere($qb->expr()->eq('i.order', ':idOrder'))
            ->leftJoin('i.item', 'it')
            ->setParameters(array(
                'idOrder' => $id
            ))
            ->groupBy('it.id')
        ;

        $order = $qb->getQuery()->getResult();

        return $order;
    }
}
